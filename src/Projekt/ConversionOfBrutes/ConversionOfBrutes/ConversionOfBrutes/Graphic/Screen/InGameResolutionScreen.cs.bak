/**
 * Author: David Spisla 
 * 
 * Concrete Class for the InGame Resolution Menu
 * Usage: This Class Implements the InGame Resolution Menu for the game  
 * Missing: 
 * - functionality of all buttons
 **/


using System.Collections.Generic;
using System.IO;
using ConversionOfBrutes.Misc;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;

namespace ConversionOfBrutes.Graphic.Screen
{
	sealed class InGameResolutionScreen : Screen
	{
		
		/// <summary>
		/// Basic constructor for the InGameOptionScreen
		/// </summary>
		public InGameResolutionScreen()
		{
			mDrawScreensBelow = true;
			mUpdateScreensBelow = false;
			Initialize();	
		}


		public override void Initialize()
		{

			InitializeAbstr();
			mBackground = new MenuLabel(MenuItem.MenuIdentifier.InGameResolutionScreen, ScaledRectangle(1920 / 2 - (1920 / 8), 1080 / 2 - (1080 / 4), 508, 563), null);

			System.Windows.Forms.Screen scr = System.Windows.Forms.Screen.PrimaryScreen;
			if (scr.Bounds.Width >= 1400 && scr.Bounds.Height >= 900)
			{
				mItems.Add(new MenuButton(MenuItem.MenuIdentifier.Resolution1400, ScaledRectangle(897, 410, 150, 50)));
			}

			mItems.Add(new MenuButton(MenuItem.MenuIdentifier.InGameOptions, ScaledRectangle(870, 700, 210, 100)));
			mItems.Add(new MenuButton(MenuItem.MenuIdentifier.Resolution1280, ScaledRectangle(897, 480, 150, 50)));
			mItems.Add(new MenuButton(MenuItem.MenuIdentifier.Resolution1024, ScaledRectangle(897, 550, 150, 50)));
			mItems.Add(new MenuButton(MenuItem.MenuIdentifier.Resolution800, ScaledRectangle(897, 620, 150, 50)));

		}

		public override void Update(GameTime gameTime)
		{
			TestMouseSlideOver();
			MenuButton button = MouseClickedGetButton(mItems);

			if (button != null)
			{
				bool resolutionChanged = false;
						switch (button.Identifier)
						{
							case MenuItem.MenuIdentifier.Resolution1400:
								Main.Graphics.PreferredBackBufferWidth = 1400;
								Main.Graphics.PreferredBackBufferHeight = 900;
								Main.Graphics.ApplyChanges();
								Initialize();
								resolutionChanged = true;
								break;
							case MenuItem.MenuIdentifier.Resolution1280:
								Main.Graphics.PreferredBackBufferWidth = 1280;
								Main.Graphics.PreferredBackBufferHeight = 720;
								Main.Graphics.ApplyChanges();
								Initialize();
								resolutionChanged = true;
								break;
							case MenuItem.MenuIdentifier.Resolution1024:
								Main.Graphics.PreferredBackBufferWidth = 1024;
								Main.Graphics.PreferredBackBufferHeight = 768;
								Main.Graphics.ApplyChanges();
								Initialize();
								resolutionChanged = true;
								break;
							case MenuItem.MenuIdentifier.Resolution800:
								Main.Graphics.PreferredBackBufferWidth = 800;
								Main.Graphics.PreferredBackBufferHeight = 600;
								Main.Graphics.ApplyChanges();
								Initialize();
								resolutionChanged = true;
								break;
							case MenuItem.MenuIdentifier.InGameOptions:
								mManager.RemoveScreen();
								mManager.AddScreen(new InGameOptionsScreen());
								break;
						
						}
				if (resolutionChanged)
				{
					SaveAndLoad.SaveGameState("ResChange");
					mManager.RemoveScreen();
					mManager.RemoveScreen();
					mManager.RemoveScreen();
					SaveAndLoad.LoadSaveGame("ResChange");
				}
					}
			
		}

		public override void Draw()
		{
			
			DrawButtonsAndBackground();
			Handling2DAnd3D();

		}
	
	}
}

