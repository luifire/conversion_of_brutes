/**
 * Author: David Spisla 
 * 
 * Concrete Class for the Statistic Menu
 * Usage: This Class Implements the Statistic Menu for the game  
 * Missing: 
 * - Get the values LostAreas, Occupied Areas, WinPointsReceived and GamesNotFinished
 **/

using System;
using System.Collections.Generic;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;

namespace ConversionOfBrutes.Graphic.Screen
{
	class StatisticScreen : Screen
	{
		
		private List<MenuLabel> mLabels;

		/// <summary>
		/// Basic constructor for the StatisticScreen
		/// </summary>
		public StatisticScreen()
		{
			Initialize();
		}

		public override sealed void Initialize()
		{

			GraphicsDeviceManager graphics = Main.Graphics;
			mScreenWidth = graphics.PreferredBackBufferWidth;
			mScreenHeight = graphics.PreferredBackBufferHeight;
			mTranslucent = false;
			mItems = new List<MenuButton>();
			mLabels = new List<MenuLabel>();
			mSpriteBatch = new SpriteBatch(graphics.GraphicsDevice);
			Main.mGameStatistic.LoadOldValues();
			mBackground = new MenuLabel(MenuItem.MenuIdentifier.StatisticScreen, ScaledRectangle(0, 0, 1920, 1080), null);
			mItems.Add(new MenuButton(MenuItem.MenuIdentifier.MainMenu, ScaledRectangle(855, 810, 210, 100)));

			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(200, 340, 0, 0), "Statistic of the last game: "));
			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(200, 370, 0, 0), "The recruited Units: " + Main.mGameStatistic.RecruitedUnits));
			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(200, 400, 0, 0), "The converted Units: " + Main.mGameStatistic.ConvertedUnits));
			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(200, 430, 0, 0), "The killed Units: " + Main.mGameStatistic.KilledUnits));
			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(200, 460, 0, 0), "The lost Units: " + Main.mGameStatistic.LostUnits));
			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(200, 490, 0, 0), "The overall received Winpoints: " + Main.mGameStatistic.WinPointsReceived));
			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(200, 520, 0, 0), "The overall lost Winpoints: " + (Main.mGameStatistic.WinPointsLost *-1)));
			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(200, 550, 0, 0), "The occupied Areas: " + Main.mGameStatistic.OccupiedAreas));
			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(200, 580, 0, 0), "The lost Areas:  " + Main.mGameStatistic.LostAreas));
			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(200, 610, 0, 0), "The total GameTime in Seconds: " + Main.mGameStatistic.GameTime));
			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(200, 660, 0, 0), "Statistic of all games: "));
			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(200, 690, 0, 0), "Games started: " + Main.mAllOverGameStatistic.GamesStarted));
			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(200, 720, 0, 0), "Games won: " + Main.mAllOverGameStatistic.GamesWon));
			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(200, 750, 0, 0), "Games lost: " + Main.mAllOverGameStatistic.GamesLost));
			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(200, 780, 0, 0), "Games not finished: " + Main.mAllOverGameStatistic.GamesNotFinished));
			

			mIsLoading = true;
		}

		public override void Update()
		{

			TestMouseSlideOver();

			MenuButton button = MouseClickedGetButton(mItems);

			if (button != null)
			{
				mManager.RemoveScreen();
				mManager.GetPeek().UpdateActivate();
				mManager.GetPeek().DrawActivate();
				mManager.GetPeek().Initialize();
			}	
		}


		public override void Draw()
		{

			DrawButtonsAndBackground();
			DrawListOfLabels(mLabels);
		}
   }
}

