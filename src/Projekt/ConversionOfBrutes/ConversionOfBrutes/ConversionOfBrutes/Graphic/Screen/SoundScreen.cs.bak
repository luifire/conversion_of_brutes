/**
 * Author: David Spisla 
 * 
 * Concrete Class for the Sound Menu
 * Usage: This Class Implements the Sound Menu for the game  
 * Missing: 
 * -nice labels
 **/

using System.Collections.Generic;
using ConversionOfBrutes.Sound;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;

namespace ConversionOfBrutes.Graphic.Screen
{
	class SoundScreen : Screen
	{
		
		protected List<MenuLabel> mLabels; 
		protected float mMusicVolume;
		protected float mSoundVolume;

		/// <summary>
		/// Basic constructor for the SoundScreen
		/// </summary>
		public SoundScreen()
		{
			Initialize();	
		}


		public override void Initialize()
		{
			GraphicsDeviceManager graphics = Main.Graphics;
			mScreenWidth = graphics.PreferredBackBufferWidth;
			mScreenHeight = graphics.PreferredBackBufferHeight;

			mMusicVolume = Main.Audio.CurrentMusicVolume;
			mSoundVolume = Main.Audio.CurrentSoundVolume;
			mTranslucent = false;
			mItems = new List<MenuButton>();
			mLabels = new List<MenuLabel>();
			mSpriteBatch = new SpriteBatch(graphics.GraphicsDevice);

			mBackground = new MenuLabel(MenuItem.MenuIdentifier.SoundScreen, ScaledRectangle(0, 0, 1920, 1080), null);
			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(400, 340, 0, 0), "Music Volume:"));
			mLabels.Add(new MenuLabel(MenuItem.MenuIdentifier.Label, ScaledRectangle(400, 520, 0, 0), "Sound Volume:"));

			mItems.Add(new MenuButton(MenuItem.MenuIdentifier.MusicUp, ScaledRectangle(400, 400, 210, 100)));
			mItems.Add(new MenuButton(MenuItem.MenuIdentifier.MusicDown, ScaledRectangle(650, 400, 210, 100)));
			mItems.Add(new MenuButton(MenuItem.MenuIdentifier.MusicOn, ScaledRectangle(900, 400, 210, 100)));
			mItems.Add(new MenuButton(MenuItem.MenuIdentifier.MusicOff, ScaledRectangle(1150, 400, 210, 100)));
			mItems.Add(new MenuButton(MenuItem.MenuIdentifier.SoundUp, ScaledRectangle(400, 580, 210, 100)));
			mItems.Add(new MenuButton(MenuItem.MenuIdentifier.SoundDown, ScaledRectangle(650, 580, 210, 100)));
			mItems.Add(new MenuButton(MenuItem.MenuIdentifier.SoundOn, ScaledRectangle(900, 580, 210, 100)));
			mItems.Add(new MenuButton(MenuItem.MenuIdentifier.SoundOff, ScaledRectangle(1150, 580, 210, 100)));
			mItems.Add(new MenuButton(MenuItem.MenuIdentifier.GameOptions, ScaledRectangle(855, 810, 210, 100)));
			
			mIsLoading = true;
		}

		public override void Update()
		{

		    TestMouseSlideOver();
			MenuButton button = MouseClickedGetButton(mItems);
			
					if (button != null)
					{

						TestMouseClickedSoundScontrol(button);
						switch (button.Identifier)
						{

							case MenuItem.MenuIdentifier.GameOptions:
								mManager.RemoveScreen();
								mManager.GetPeek().UpdateActivate();
								mManager.GetPeek().DrawActivate();
								break;
						}
					}
		}

		public override void Draw()
		{
			
			
			DrawButtonsAndBackground();
			
			//Draw labels
			mSpriteBatch.Begin(SpriteSortMode.Deferred, BlendState.AlphaBlend);

			foreach (MenuLabel label in mLabels)
			{
				mSpriteBatch.DrawString(label.GetFont(), label.Text, new Vector2(label.Rectangle.X, label.Rectangle.Y), Color.AliceBlue,
				0f, new Vector2(0, 0), 2f, SpriteEffects.None, 0f);
			}

			mSpriteBatch.End();

		}


		protected void TestMouseClickedSoundScontrol(MenuButton button)
		{
			
				switch (button.Identifier)
				{

					case MenuItem.MenuIdentifier.MusicUp:
						mMusicVolume += 0.3f;
						Main.Audio.SetVolume(AudioManager.Category.Music, mMusicVolume);
						break;
					case MenuItem.MenuIdentifier.MusicDown:
						mMusicVolume -= 0.3f;
						Main.Audio.SetVolume(AudioManager.Category.Music, mMusicVolume);
						break;
					case MenuItem.MenuIdentifier.MusicOn:
						Main.Audio.ResumeSound(AudioManager.Category.Music);
						break;
					case MenuItem.MenuIdentifier.MusicOff:
						Main.Audio.PauseSound(AudioManager.Category.Music);
						break;
					case MenuItem.MenuIdentifier.SoundUp:
						mSoundVolume += 0.3f;
						Main.Audio.SetVolume(AudioManager.Category.Units, mSoundVolume);
						Main.Audio.PlaySound(AudioManager.Sound.Convert);
						break;
					case MenuItem.MenuIdentifier.SoundDown:
						mSoundVolume -= 0.3f;
						Main.Audio.SetVolume(AudioManager.Category.Units, mSoundVolume);
						Main.Audio.PlaySound(AudioManager.Sound.Convert);
						break;
					case MenuItem.MenuIdentifier.SoundOn:
						Main.Audio.ResumeSound(AudioManager.Category.Units);
						Main.Audio.PlaySound(AudioManager.Sound.Convert);
						break;
					case MenuItem.MenuIdentifier.SoundOff:
						Main.Audio.PlaySound(AudioManager.Sound.Convert);
						Main.Audio.PauseSound(AudioManager.Category.Units);
						break;
				}
			}
	}
}

